# build_and_save_vocab.py

import json
import pandas as pd

from chord_markov_build import build_vocab_and_composer_indices

def main():
    # 1) Load chord sequences from disk
    #    This file must already exist (generated by save_chord_sequences.py).
    with open('chord_sequences.json', 'r') as f:
        chord_seqs = json.load(f)   # dict: filename -> [ ordered chord list ]

    # 2) Build vocabulary & related mappings using only training split
    #    (We point to 'train_set.csv' instead of 'labels.csv'.)
    vocab, chord_to_idx, composers, file2composer = build_vocab_and_composer_indices(
        'train_set.csv',
        chord_seqs
    )

    print("Built vocabulary of size H =", len(vocab))
    print("Example vocab entries:", vocab[:10])
    print("Composers:", composers)

    # 3) Save vocabulary and index map to disk
    with open('chord_vocab.json', 'w') as f:
        json.dump(vocab, f)
    with open('chord_to_idx.json', 'w') as f:
        json.dump(chord_to_idx, f)

    print("Saved chord_vocab.json and chord_to_idx.json")

if __name__ == '__main__':
    main()
